{"version":3,"sources":["preact.js"],"names":["render","vnode","parent","merge","arguments","length","undefined","existing","_component","_componentConstructor","nodeName","built","build","c","deepHook","parentNode","appendChild","h","attributes","_len","args","Array","_key","children","sharedArr","len","arr","lastSimple","i","_p","empty","join","j","child","simple","isVNode","String","push","p","VNode","hook","hooks","obj","name","fn","_len2","_key2","apply","_len3","_key3","concat","__isVNode","x","isSameNodeType","node","nodeType","isFunctionalComponent","toLowerCase","_ref2","prototype","buildFunctionalComponent","getNodeProps","EMPTY_BASE","triggerComponentRender","component","_dirty","renderQueue","add","setComponentProps","props","opts","EMPTY","d","_disableRendering","nextProps","renderSync","options","syncComponentUpdates","renderComponent","s","state","base","rendered","childComponent","inst","constructor","unmountComponent","childProps","SYNC_RENDER","componentRecycler","create","_parentComponent","NO_RENDER","_p2","replaceChild","buildComponentFromVNode","dom","isOwner","createComponentFromVNode","DOM_RENDER","removeChild","collect","out","textContent","recycler","document","createTextNode","appendChildren","slice","call","childNodes","old","getNodeAttributes","attrs","_name","hop","o","setAccessor","_name2","value","prev","getAccessor","keyed","t","key","getAttribute","splice","newChildren","vlen","vchild","_attrs","next","insertBefore","createLinkedState","eventPath","path","split","p0","e","_component$setState","this","v","delve","type","match","checked","setState","frag","createDocumentFragment","className","style","cssText","setComplexAccessor","substring","_type","normalizeEventName","l","_listeners","addEventListener","eventProxy","removeAttribute","setAttribute","list","getNamedItem","getAttributesAsObject","item","extend","styleObjToCss","str","prop","val","jsToCss","NON_DIMENSION_PROPS","hashToClassName","boxFlex","boxFlexGroup","columnCount","fillOpacity","flex","flexGrow","flexPositive","flexShrink","flexNegative","fontWeight","lineClamp","lineHeight","opacity","order","orphans","strokeOpacity","widows","zIndex","zoom","Object","hasOwnProperty","memoize","mem","k","map","_ref","Component","_classCallCheck","_linkedStates","shouldComponentUpdate","linkState","cacheKey","setProps","exports","items","itemsOffline","debounceRendering","process","setTimeout","rerender","nodes","normalizeName","toUpperCase","clean","pop","createElement","remove","removeEventListener","components","ctor","replace"],"mappings":"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","file":"preact.js","sourcesContent":["const EMPTY = {};\nconst NO_RENDER = { render: false };\nconst SYNC_RENDER = { renderSync: true };\nconst DOM_RENDER = { build: true };\nconst EMPTY_BASE = '';\nconst NON_DIMENSION_PROPS = {\n\tboxFlex:1,boxFlexGroup:1,columnCount:1,fillOpacity:1,flex:1,flexGrow:1,\n\tflexPositive:1,flexShrink:1,flexNegative:1,fontWeight:1,lineClamp:1,lineHeight:1,\n\topacity:1,order:1,orphans:1,strokeOpacity:1,widows:1,zIndex:1,zoom:1\n};\n\nlet slice = Array.prototype.slice;\n\nlet hop = Object.prototype.hasOwnProperty;\n\n/** Create a caching wrapper for the given function.\n *\t@private\n */\nlet memoize = (fn, mem={}) => k => hop.call(mem, k) ? mem[k] : (mem[k] = fn(k));\n\n/** Get a deep property value from the given object, expressed in dot-notation.\n *\t@private\n */\nlet delve = (obj, key) => (key.split('.').map( p => (obj = obj && obj[p]) ), obj);\n\n\n\n/** Global options\n *\t@public\n *\t@namespace {Object}\n */\nlet options = {\n\t/** If `true`, `prop` changes trigger synchronous component updates.\n\t *\t@boolean\n\t */\n\tsyncComponentUpdates: true\n};\n\n\n\n/** Global hook methods\n *\t@public\n *\t@namespace {Object}\n */\nlet hooks = {\n\n\t/** Processes all created VNodes.\n\t *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n\t *\t@protected\n\t */\n\tvnode({ attributes }) {\n\t\tif (!attributes) return;\n\n\t\tlet s = attributes.style;\n\t\tif (s && !s.substring) {\n\t\t\tattributes.style = styleObjToCss(s);\n\t\t}\n\n\t\tlet c = attributes['class'];\n\t\tif (hop.call(attributes, 'className')) {\n\t\t\tc = attributes['class'] = attributes.className;\n\t\t\tdelete attributes.className;\n\t\t}\n\t\tif (c && !c.substring) {\n\t\t\tattributes['class'] = hashToClassName(c);\n\t\t}\n\t}\n\n};\n\n\n\n/** Base Component class, for he ES6 Class method of creating Components\n *\t@public\n *\n *\t@example\n *\tclass MyFoo extends Component {\n *\t\trender(props, state) {\n *\t\t\treturn <div />;\n *\t\t}\n *\t}\n */\nexport class Component {\n\tconstructor() {\n\t\t/** @private */\n\t\tthis._dirty = this._disableRendering = false;\n\t\t/** @private */\n\t\tthis._linkedStates = {};\n\t\t/** @public */\n\t\tthis.nextProps = this.base = null;\n\t\t/** @type {object} */\n\t\tthis.props = hook(this, 'getDefaultProps') || {};\n\t\t/** @type {object} */\n\t\tthis.state = hook(this, 'getInitialState') || {};\n\t\t// @TODO remove me?\n\t\thook(this, 'initialize');\n\t}\n\n\t/** Returns a `boolean` value indicating if the component should re-render when receiving the given `props` and `state`.\n\t *\t@param {object} props\n\t *\t@param {object} state\n\t */\n\tshouldComponentUpdate(props, state) {\n\t\treturn true;\n\t}\n\n\t/** Returns a function that sets a state property when called.\n\t *\tCalling linkState() repeatedly with the same arguments returns a cached link function.\n\t *\n\t *\tProvides some built-in special cases:\n\t *\t\t- Checkboxes and radio buttons link their boolean `checked` value\n\t *\t\t- Inputs automatically link their `value` property\n\t *\t\t- Event paths fall back to any associated Component if not found on an element\n\t *\t\t- If linked value is a function, will invoke it and use the result\n\t *\n\t *\t@param {string} key\t\t\t\tThe path to set - can be a dot-notated deep key\n\t *\t@param {string} [eventPath]\t\tIf set, attempts to find the new state value at a given dot-notated path within the object passed to the linkedState setter.\n\t *\t@returns {function} linkStateSetter(e)\n\t *\n\t *\t@example Update a \"text\" state value when an input changes:\n\t *\t\t<input onChange={ this.linkState('text') } />\n\t *\n\t *\t@example Set a deep state value on click\n\t *\t\t<button onClick={ this.linkState('touch.coords', 'touches.0') }>Tap</button\n\t */\n\tlinkState(key, eventPath) {\n\t\tlet c = this._linkedStates,\n\t\t\tcacheKey = key + '|' + (eventPath || '');\n\t\treturn c[cacheKey] || (c[cacheKey] = createLinkedState(this, key, eventPath));\n\t}\n\n\t/** Update component state by copying properties from `state` to `this.state`.\n\t *\t@param {object} state\t\tA hash of state properties to update with new values\n\t */\n\tsetState(state) {\n\t\textend(this.state, state);\n\t\ttriggerComponentRender(this);\n\t}\n\n\t/** @private */\n\tsetProps(props, opts) {\n\t\treturn setComponentProps(this, props, opts);\n\t}\n\n\t/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t *\t@param {object} props\t\tProps (eg: JSX attributes) received from parent element/component\n\t *\t@param {object} state\t\tThe component's current state\n\t *\t@returns VNode\n\t */\n\trender(props) {\n\t\treturn h('div', null, props.children);\n\t}\n}\n\n\n\n/** Virtual DOM Node */\nexport class VNode {\n\tconstructor(nodeName, attributes, children) {\n\t\t/** @type {string|function} */\n\t\tthis.nodeName = nodeName;\n\n\t\t/** @type {object<string>|undefined} */\n\t\tthis.attributes = attributes;\n\n\t\t/** @type {array<VNode>|undefined} */\n\t\tthis.children = children;\n\t}\n}\nVNode.prototype.__isVNode = true;\n\n\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n *\t@public\n *\n *\t@example\n *\t// render a div into <body>:\n *\trender(<div id=\"hello\">hello!</div>, document.body);\n *\n *\t@example\n *\t// render a \"Thing\" component into #foo:\n *\tconst Thing = ({ name }) => <span>{ name }</span>;\n *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge=null) {\n\tlet existing = merge && merge._component && merge._componentConstructor===vnode.nodeName,\n\t\tbuilt = build(merge, vnode),\n\t\tc = !existing && built._component;\n\tif (c) deepHook(c, 'componentWillMount');\n\tif (build.parentNode!==parent) {\n\t\tparent.appendChild(built);\n\t}\n\tif (c) deepHook(c, 'componentDidMount');\n\treturn built;\n}\n\n\n\n/** @public JSX/hyperscript reviver\n *\t@see http://jasonformat.com/wtf-is-jsx\n *  @example\n *  /** @jsx h *\\/\n *  import { render, h } from 'preact';\n *  render(<span>foo</span>, document.body);\n */\nexport function h(nodeName, attributes, ...args) {\n\tlet children,\n\t\tsharedArr = [],\n\t\tlen = args.length,\n\t\tarr, lastSimple;\n\tif (len) {\n\t\tchildren = [];\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet p = args[i];\n\t\t\tif (empty(p)) continue;\n\t\t\tif (p.join) {\n\t\t\t\tarr = p;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tarr = sharedArr;\n\t\t\t\tarr[0] = p;\n\t\t\t}\n\t\t\tfor (let j=0; j<arr.length; j++) {\n\t\t\t\tlet child = arr[j],\n\t\t\t\t\tsimple = !empty(child) && !isVNode(child);\n\t\t\t\tif (simple) child = String(child);\n\t\t\t\tif (simple && lastSimple) {\n\t\t\t\t\tchildren[children.length-1] += child;\n\t\t\t\t}\n\t\t\t\telse if (!empty(child)) {\n\t\t\t\t\tchildren.push(child);\n\t\t\t\t}\n\t\t\t\tlastSimple = simple;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (attributes && attributes.children) {\n\t\tdelete attributes.children;\n\t}\n\n\tlet p = new VNode(nodeName, attributes || undefined, children || undefined);\n\thook(hooks, 'vnode', p);\n\treturn p;\n}\n\n\n\n/** Invoke a \"hook\" method with arguments if it exists.\n *\t@private\n */\nfunction hook(obj, name, ...args) {\n\tlet fn = obj[name];\n\tif (fn && typeof fn==='function') return fn.apply(obj, args);\n}\n\n\n\n/** Invoke hook() on a component and child components (recursively)\n *\t@private\n */\nfunction deepHook(obj, ...args) {\n\tdo {\n\t\thook(obj, ...args);\n\t} while (obj=obj._component);\n}\n\n\n\n/** Fast check if an object is a VNode.\n *\t@private\n */\nfunction isVNode(obj) {\n\treturn obj && obj.__isVNode===true;\n}\n\n\n\n/** Check if a value is `null` or `undefined`.\n *\t@private\n */\nfunction empty(x) {\n\treturn x===null || x===undefined;\n}\n\n\n\n/** Check if two nodes are equivalent.\n *\t@param {Element} node\n *\t@param {VNode} vnode\n *\t@private\n */\nfunction isSameNodeType(node, vnode) {\n\tif (node.nodeType===3) {\n\t\treturn typeof vnode==='string';\n\t}\n\tif (isFunctionalComponent(vnode)) return true;\n\tlet nodeName = vnode.nodeName;\n\tif (typeof nodeName==='function') return node._componentConstructor===nodeName;\n\treturn node.nodeName.toLowerCase()===nodeName;\n}\n\n\n\n/** Check if a VNode is a reference to a stateless functional component.\n *\tA function component is represented as a VNode whose `nodeName` property is a reference to a function.\n *\tIf that function is not a Component (ie, has no `.render()` method on a prototype), it is considered a stateless functional component.\n *\t@param {VNode} vnode\tA VNode\n *\t@private\n */\nfunction isFunctionalComponent({ nodeName }) {\n\treturn typeof nodeName==='function' && !nodeName.prototype.render;\n}\n\n\n\n/** Construct a resultant VNode from a VNode referencing a stateless functional component.\n *\t@param {VNode} vnode\tA VNode with a `nodeName` property that is a reference to a function.\n *\t@private\n */\nfunction buildFunctionalComponent(vnode) {\n\treturn vnode.nodeName(getNodeProps(vnode)) || EMPTY_BASE;\n}\n\n\n\n/** Mark component as dirty and queue up a render.\n *\t@param {Component} component\n *\t@private\n */\nfunction triggerComponentRender(component) {\n\tif (!component._dirty) {\n\t\tcomponent._dirty = true;\n\t\trenderQueue.add(component);\n\t}\n}\n\n\n\n/** Set a component's `props` (generally derived from JSX attributes).\n*\t@param {Object} props\n*\t@param {Object} [opts]\n*\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n*\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nfunction setComponentProps(component, props, opts=EMPTY) {\n\tlet d = component._disableRendering;\n\tcomponent._disableRendering = true;\n\thook(component, 'componentWillReceiveProps', props, component.props);\n\tcomponent.nextProps = props;\n\tcomponent._disableRendering = d;\n\tif (opts.render!==false) {\n\t\tif (opts.renderSync || options.syncComponentUpdates) {\n\t\t\trenderComponent(component);\n\t\t}\n\t\telse {\n\t\t\ttriggerComponentRender(component);\n\t\t}\n\t}\n}\n\n\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nfunction renderComponent(component, opts) {\n\tif (component._disableRendering) return;\n\n\tcomponent._dirty = false;\n\n\tlet p = component.nextProps,\n\t\ts = component.state;\n\n\tif (component.base) {\n\t\tif (hook(component, 'shouldComponentUpdate', p, s)===false) {\n\t\t\tcomponent.props = p;\n\t\t\treturn;\n\t\t}\n\n\t\thook(component, 'componentWillUpdate', p, s);\n\t}\n\n\tcomponent.props = p;\n\n\tlet rendered = hook(component, 'render', p, s),\n\t\tchildComponent = rendered && rendered.nodeName,\n\t\tbase;\n\n\tif (typeof childComponent==='function' && childComponent.prototype.render) {\n\t\t// set up high order component link\n\n\t\tlet inst = component._component;\n\t\tif (inst && inst.constructor!==childComponent) {\n\t\t\tunmountComponent(component.base, inst);\n\t\t\tinst = null;\n\t\t}\n\n\t\tlet childProps = getNodeProps(rendered);\n\n\t\tif (inst) {\n\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER);\n\t\t}\n\t\telse {\n\t\t\tinst = componentRecycler.create(childComponent);\n\t\t\tinst._parentComponent = component;\n\t\t\tcomponent._component = inst;\n\t\t\tif (component.base) deepHook(inst, 'componentWillMount');\n\t\t\tsetComponentProps(inst, childProps, NO_RENDER);\n\t\t\trenderComponent(inst, opts);\n\t\t\tif (component.base) deepHook(inst, 'componentDidMount');\n\t\t}\n\n\t\tbase = inst.base;\n\t}\n\telse {\n\t\t// destroy high order component link\n\t\tif (component._component) {\n\t\t\tunmountComponent(component.base, component._component);\n\t\t}\n\t\tcomponent._component = null;\n\n\t\tif (component.base || (opts && opts.build)) {\n\t\t\tbase = build(component.base, rendered || EMPTY_BASE, component);\n\t\t}\n\t}\n\n\tif (component.base && base!==component.base) {\n\t\tlet p = component.base.parentNode;\n\t\tif (p) p.replaceChild(base, component.base);\n\t}\n\n\tcomponent.base = base;\n\tif (base) {\n\t\tbase._component = component;\n\t\tbase._componentConstructor = component.constructor;\n\t}\n\n\thook(component, 'componentDidUpdate', p, s);\n\n\treturn rendered;\n}\n\n\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nfunction buildComponentFromVNode(dom, vnode) {\n\tlet c = dom && dom._component;\n\n\tif (isFunctionalComponent(vnode)) {\n\t\tlet p = build(dom, buildFunctionalComponent(vnode));\n\t\tp._componentConstructor = vnode.nodeName;\n\t\treturn p;\n\t}\n\n\tlet isOwner = c && dom._componentConstructor===vnode.nodeName;\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (isOwner) {\n\t\tsetComponentProps(c, getNodeProps(vnode), SYNC_RENDER);\n\t}\n\telse {\n\t\tif (c) {\n\t\t\tunmountComponent(dom, c);\n\t\t}\n\t\tdom = createComponentFromVNode(vnode);\n\t}\n\n\treturn dom;\n}\n\n\n\n/** Instantiate and render a Component, given a VNode whose nodeName is a constructor.\n *\t@param {VNode} vnode\n *\t@private\n */\nfunction createComponentFromVNode(vnode) {\n\tlet component = componentRecycler.create(vnode.nodeName);\n\n\tlet props = getNodeProps(vnode);\n\tsetComponentProps(component, props, NO_RENDER);\n\trenderComponent(component, DOM_RENDER);\n\n\t// let node = component.base;\n\t//if (!node._component) {\n\t//\tnode._component = component;\n\t//\tnode._componentConstructor = vnode.nodeName;\n\t//}\n\n\treturn component.base;\n}\n\n\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Element} dom\t\t\tA DOM node from which to unmount the given Component\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nfunction unmountComponent(dom, component) {\n\tconsole.warn('unmounting mismatched component', component);\n\n\tif (dom._component===component) {\n\t\tdelete dom._component;\n\t\tdelete dom._componentConstructor;\n\t}\n\thook(component, 'componentWillUnmount');\n\tlet base = component.base;\n\tif (base && base.parentNode) {\n\t\tbase.parentNode.removeChild(base);\n\t}\n\thook(component, 'componentDidUnmount');\n\tcomponentRecycler.collect(component);\n}\n\n\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nfunction build(dom, vnode) {\n\tlet out = dom,\n\t\tnodeName = vnode.nodeName;\n\n\tif (typeof nodeName==='function' && !nodeName.prototype.render) {\n\t\tvnode = buildFunctionalComponent(vnode);\n\t\tnodeName = vnode.nodeName;\n\t}\n\n\tif (typeof nodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode);\n\t}\n\n\tif (typeof vnode==='string') {\n\t\tif (dom) {\n\t\t\tif (dom.nodeType===3) {\n\t\t\t\tdom.textContent = vnode;\n\t\t\t\treturn dom;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (dom.nodeType===1) recycler.collect(dom);\n\t\t\t}\n\t\t}\n\t\treturn document.createTextNode(vnode);\n\t}\n\n\tif (nodeName===null || nodeName===undefined) {\n\t\tnodeName = 'x-undefined-element';\n\t}\n\n\tif (!dom) {\n\t\tout = recycler.create(nodeName);\n\t}\n\telse if (dom.nodeName.toLowerCase()!==nodeName) {\n\t\tout = recycler.create(nodeName);\n\t\tappendChildren(out, slice.call(dom.childNodes));\n\t\t// reclaim element nodes\n\t\tif (dom.nodeType===1) recycler.collect(dom);\n\t}\n\n\t// apply attributes\n\tlet old = getNodeAttributes(out) || EMPTY,\n\t\tattrs = vnode.attributes || EMPTY;\n\n\t// removed attributes\n\tif (old!==EMPTY) {\n\t\tfor (let name in old) {\n\t\t\tif (hop.call(old, name)) {\n\t\t\t\tlet o = attrs[name];\n\t\t\t\tif (o===undefined || o===null || o===false) {\n\t\t\t\t\tsetAccessor(out, name, null, old[name]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// new & updated attributes\n\tif (attrs!==EMPTY) {\n\t\tfor (let name in attrs) {\n\t\t\tif (hop.call(attrs, name)) {\n\t\t\t\tlet value = attrs[name];\n\t\t\t\tif (value!==undefined && value!==null && value!==false) {\n\t\t\t\t\tlet prev = getAccessor(out, name, old[name]);\n\t\t\t\t\tif (value!==prev) {\n\t\t\t\t\t\tsetAccessor(out, name, value, prev);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tlet children = slice.call(out.childNodes);\n\tlet keyed = {};\n\tfor (let i=children.length; i--; ) {\n\t\tlet t = children[i].nodeType;\n\t\tlet key;\n\t\tif (t===3) {\n\t\t\tkey = t.key;\n\t\t}\n\t\telse if (t===1) {\n\t\t\tkey = children[i].getAttribute('key');\n\t\t}\n\t\telse {\n\t\t\tcontinue;\n\t\t}\n\t\tif (key) keyed[key] = children.splice(i, 1)[0];\n\t}\n\tlet newChildren = [];\n\n\tif (vnode.children) {\n\t\tfor (let i=0, vlen=vnode.children.length; i<vlen; i++) {\n\t\t\tlet vchild = vnode.children[i];\n\t\t\t// if (isFunctionalComponent(vchild)) {\n\t\t\t// \tvchild = buildFunctionalComponent(vchild);\n\t\t\t// }\n\t\t\tlet attrs = vchild.attributes,\n\t\t\t\tkey, child;\n\t\t\tif (attrs) {\n\t\t\t\tkey = attrs.key;\n\t\t\t\tchild = key && keyed[key];\n\t\t\t}\n\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\tif (!child) {\n\t\t\t\tlet len = children.length;\n\t\t\t\tif (children.length) {\n\t\t\t\t\tfor (let j=0; j<len; j++) {\n\t\t\t\t\t\tif (isSameNodeType(children[j], vchild)) {\n\t\t\t\t\t\t\tchild = children.splice(j, 1)[0];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tnewChildren.push(build(child, vchild));\n\t\t}\n\t}\n\n\t// apply the constructed/enhanced ordered list to the parent\n\tfor (let i=0, len=newChildren.length; i<len; i++) {\n\t\t// we're intentionally re-referencing out.childNodes here as it is a live NodeList\n\t\tif (out.childNodes[i]!==newChildren[i]) {\n\t\t\tlet child = newChildren[i],\n\t\t\t\tc = child._component,\n\t\t\t\tnext = out.childNodes[i+1];\n\t\t\tif (c) deepHook(c, 'componentWillMount');\n\t\t\tif (next) {\n\t\t\t\tout.insertBefore(child, next);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout.appendChild(child);\n\t\t\t}\n\t\t\tif (c) deepHook(c, 'componentDidMount');\n\t\t}\n\t}\n\n\t// remove orphaned children\n\tfor (let i=0, len=children.length; i<len; i++) {\n\t\tlet child = children[i],\n\t\t\tc = child._component;\n\t\tif (c) hook(c, 'componentWillUnmount');\n\t\tchild.parentNode.removeChild(child);\n\t\tif (c) {\n\t\t\thook(c, 'componentDidUnmount');\n\t\t\tcomponentRecycler.collect(c);\n\t\t}\n\t\telse if (child.nodeType===1) {\n\t\t\trecycler.collect(child);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n\n\n/** Create an Event handler function that sets a given state property.\n *\t@param {Component} component\tThe component whose state should be updated\n *\t@param {string} key\t\t\t\tA dot-notated key path to update in the component's state\n *\t@param {string} eventPath\t\tA dot-notated key path to the value that should be retrieved from the Event or component\n *\t@returns {function} linkedStateHandler\n *\t@private\n */\nfunction createLinkedState(component, key, eventPath) {\n\tlet path = key.split('.'),\n\t\tp0 = path[0];\n\treturn function(e) {\n\t\tlet t = this,\n\t\t\tobj = component.state,\n\t\t\tv, i;\n\t\tif (typeof eventPath==='string') {\n\t\t\tv = delve(e, eventPath);\n\t\t\tif (empty(v) && (t=t._component)) {\n\t\t\t\tv = delve(t, eventPath);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tv = (t.nodeName+t.type).match(/^input(checkbox|radio)$/i) ? t.checked : t.value;\n\t\t}\n\t\tif (typeof v==='function') v = v.call(t);\n\t\tfor (i=0; i<path.length-1; i++) {\n\t\t\tobj = obj[path[i]] || {};\n\t\t}\n\t\tobj[path[i]] = v;\n\t\tcomponent.setState({ [p0]: component.state[p0] });\n\t};\n}\n\n\n\n/** Managed queue of dirty components to be re-rendered.\n *\t@private\n */\nlet renderQueue = {\n\t// items/itemsOffline swap on each process() call (just a simple pool technique)\n\titems: [],\n\titemsOffline: [],\n\n\tadd(component) {\n\t\tif (renderQueue.items.push(component)!==1) return;\n\n\t\tlet d = hooks.debounceRendering;\n\t\tif (d) d(renderQueue.process);\n\t\telse setTimeout(renderQueue.process, 0);\n\t},\n\n\tprocess() {\n\t\tlet items = renderQueue.items,\n\t\t\tlen = items.length;\n\t\tif (!len) return;\n\t\trenderQueue.items = renderQueue.itemsOffline;\n\t\trenderQueue.items.length = 0;\n\t\trenderQueue.itemsOffline = items;\n\t\twhile (len--) {\n\t\t\tif (items[len]._dirty) {\n\t\t\t\trenderComponent(items[len]);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\n/** Trigger all queued component renders.\n *\t@function\n */\nlet rerender = renderQueue.process\n\n\n\n/** DOM node pool, keyed on nodeName.\n *\t@private\n */\nlet recycler = {\n\tnodes: {},\n\tnormalizeName: memoize(name => name.toUpperCase()),\n\n\tcollect(node) {\n\t\trecycler.clean(node);\n\t\tlet name = recycler.normalizeName(node.nodeName),\n\t\t\tlist = recycler.nodes[name];\n\t\tif (list) list.push(node);\n\t\telse recycler.nodes[name] = [node];\n\t},\n\n\tcreate(nodeName) {\n\t\tlet name = recycler.normalizeName(nodeName),\n\t\t\tlist = recycler.nodes[name];\n\t\treturn list && list.pop() || document.createElement(nodeName);\n\t},\n\n\tclean(node) {\n\t\tnode.remove();\n\n\t\tif (node.nodeType===3) return;\n\n\t\tdelete node._component;\n\t\tdelete node._componentConstructor;\n\n\t\t// remove event listeners & registry\n\t\tlet l = node._listeners;\n\t\tdelete node._listeners;\n\t\tif (l) for (let i in l) node.removeEventListener(i, eventProxy);\n\n\t\t// strip attributes\n\t\tlet len = node.attributes && node.attributes.length;\n\t\tif (len) for (let i=len; i--; ) {\n\t\t\tnode.removeAttribute(node.attributes[i].name);\n\t\t}\n\n\t\t// if (node.childNodes.length>0) {\n\t\t// \tconsole.warn(`Warning: Recycler collecting <${node.nodeName}> with ${node.childNodes.length} children.`);\n\t\t// \tslice.call(node.childNodes).forEach(recycler.collect);\n\t\t// }\n\t}\n};\n\n\n\n/** Retains a pool of Components for re-use, keyed on component name.\n *\t@private\n */\nlet componentRecycler = {\n\tcomponents: {},\n\n\tcollect(component) {\n\t\tlet name = component.constructor.name,\n\t\t\tlist = componentRecycler.components[name];\n\t\tif (list) list.push(component);\n\t\telse componentRecycler.components[name] = [component];\n\t},\n\n\tcreate(ctor) {\n\t\tlet list = componentRecycler.components[ctor.name];\n\t\tif (list && list.length) {\n\t\t\tfor (let i=list.length; i--; ) {\n\t\t\t\tif (list[i].constructor===ctor) {\n\t\t\t\t\treturn list.splice(i, 1)[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ctor();\n\t}\n};\n\n\n\n/** Append multiple children to a Node.\n *\tUses a Document Fragment to batch when appending 2 or more children\n *\t@private\n */\nfunction appendChildren(parent, children) {\n\tlet len = children.length;\n\tif (len<=2) {\n\t\tparent.appendChild(children[0]);\n\t\tif (len===2) parent.appendChild(children[1]);\n\t\treturn;\n\t}\n\n\tlet frag = document.createDocumentFragment();\n\tfor (let i=0; i<len; i++) frag.appendChild(children[i]);\n\tparent.appendChild(frag);\n}\n\n\n\n/** Retrieve the value of a rendered attribute\n *\t@private\n */\nfunction getAccessor(node, name, value) {\n\tif (name==='class') return node.className;\n\tif (name==='style') return node.style.cssText;\n\treturn value;\n}\n\n\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@private\n */\nfunction setAccessor(node, name, value, old) {\n\tif (name==='class') {\n\t\tnode.className = value;\n\t}\n\telse if (name==='style') {\n\t\tnode.style.cssText = value;\n\t}\n\telse {\n\t\tsetComplexAccessor(node, name, value, old);\n\t}\n}\n\n\n/** For props without explicit behavior, apply to a Node as event handlers or attributes.\n *\t@private\n */\nfunction setComplexAccessor(node, name, value, old) {\n\tif (name.substring(0,2)==='on') {\n\t\tlet type = normalizeEventName(name),\n\t\t\tl = node._listeners || (node._listeners = {});\n\t\tif (!l[type]) node.addEventListener(type, eventProxy);\n\t\tl[type] = value;\n\t\t// @TODO automatically remove proxy event listener when no handlers are left\n\t\treturn;\n\t}\n\n\tlet type = typeof value;\n\tif (value===null) {\n\t\tnode.removeAttribute(name);\n\t}\n\telse if (type!=='function' && type!=='object') {\n\t\tnode.setAttribute(name, value);\n\t}\n}\n\n\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n\tlet fn = this._listeners[normalizeEventName(e.type)];\n\tif (fn) return fn.call(this, hook(hooks, 'event', e) || e);\n}\n\n\n\n/** Convert an Event name/type to lowercase and strip any \"on*\" prefix.\n *\t@function\n *\t@private\n */\nlet normalizeEventName = memoize(t => t.replace(/^on/i,'').toLowerCase());\n\n\n\n/** Get a node's attributes as a hashmap, regardless of type.\n *\t@private\n */\nfunction getNodeAttributes(node) {\n\tlet list = node.attributes;\n\tif (!list || !list.getNamedItem) return list;\n\tif (list.length) return getAttributesAsObject(list);\n}\n\n\n\n/** Convert a DOM `.attributes` NamedNodeMap to a hashmap.\n *\t@private\n */\nfunction getAttributesAsObject(list) {\n\tlet attrs = {};\n\tfor (let i=list.length; i--; ) {\n\t\tlet item = list[i];\n\t\tattrs[item.name] = item.value;\n\t}\n\treturn attrs;\n}\n\n\n\n/** Reconstruct Component-style `props` from a VNode\n *\t@private\n */\nfunction getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tif (vnode.children) {\n\t\tprops.children = vnode.children;\n\t}\n\treturn props;\n}\n\n\n\n/** Convert a hashmap of styles to CSSText\n *\t@private\n */\nfunction styleObjToCss(s) {\n\tlet str = '',\n\t\tsep = ': ',\n\t\tterm = '; ';\n\tfor (let prop in s) {\n\t\tif (hop.call(s, prop)) {\n\t\t\tlet val = s[prop];\n\t\t\tstr += jsToCss(prop);\n\t\t\tstr += sep;\n\t\t\tstr += val;\n\t\t\tif (typeof val==='number' && !hop.call(NON_DIMENSION_PROPS, prop)) {\n\t\t\t\tstr += 'px';\n\t\t\t}\n\t\t\tstr += term;\n\t\t}\n\t}\n\treturn str;\n}\n\n\n\n/** Convert a hashmap of CSS classes to a space-delimited className string\n *\t@private\n */\nfunction hashToClassName(c) {\n\tlet str = '';\n\tfor (let prop in c) {\n\t\tif (c[prop]) {\n\t\t\tif (str) str += ' ';\n\t\t\tstr += prop;\n\t\t}\n\t}\n\treturn str;\n}\n\n\n\n/** Convert a JavaScript camel-case CSS property name to a CSS property name\n *\t@private\n *\t@function\n */\nlet jsToCss = memoize( s => s.replace(/([A-Z])/,'-$1').toLowerCase() );\n\n\n\n/** Copy own-properties from `props` onto `obj`.\n *\t@returns obj\n *\t@private\n */\nfunction extend(obj, props) {\n\tfor (let i in props) if (hop.call(props, i)) {\n\t\tobj[i] = props[i];\n\t}\n\treturn obj;\n}\n\n\nexport { options, hooks, rerender };\nexport default { options, hooks, render, rerender, h, Component };\n"]}